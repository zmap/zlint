/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "CryptographicMessageSyntax"
 * 	found in "asn1/rfc3369-CryptographicMessageSyntax.asn1"
 * 	`asn1c -S /home/fotisl/Projects/revlintsynt/asn1c/skeletons -pdu=all -fwide-types -fcompound-names`
 */

#ifndef	_ExtendedCertificateOrCertificate_H_
#define	_ExtendedCertificateOrCertificate_H_


#include <asn_application.h>

/* Including external dependencies */
#include "Certificate.h"
#include "ExtendedCertificate.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum ExtendedCertificateOrCertificate_PR {
	ExtendedCertificateOrCertificate_PR_NOTHING,	/* No components present */
	ExtendedCertificateOrCertificate_PR_certificate,
	ExtendedCertificateOrCertificate_PR_extendedCertificate
} ExtendedCertificateOrCertificate_PR;

/* ExtendedCertificateOrCertificate */
typedef struct ExtendedCertificateOrCertificate {
	ExtendedCertificateOrCertificate_PR present;
	union ExtendedCertificateOrCertificate_u {
		Certificate_t	 certificate;
		ExtendedCertificate_t	 extendedCertificate;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} ExtendedCertificateOrCertificate_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_ExtendedCertificateOrCertificate;

#ifdef __cplusplus
}
#endif

#endif	/* _ExtendedCertificateOrCertificate_H_ */
#include <asn_internal.h>
